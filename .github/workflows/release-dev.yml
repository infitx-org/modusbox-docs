name: release-dev

on:
  push:
    branches:
      - dev
jobs:
  build-and-upload:
    name: Build site in github vm and upload to s3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Download Antora
        run: npm i -g @antora/cli@2.3 @antora/site-generator-default@2.3

      # Start using portx-ui
#      - name: Checkout portx-ui repo master branch
#        uses: actions/checkout@v2
#        with:
#          repository: modusintegration/portx-ui
#          ref: master
#          path: portx-ui
#          token: ${{ secrets.GIT_PAT }}
#
#      - name: Download Antora
#        run: npm install -g gulp-cli
#
#      - name: Build UI
#        run: make bundle
#        working-directory: ./portx-ui
      # End using portx-ui

      # Upload to s3
      - name: Configure main account AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MAIN_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MAIN_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Download the bundle from s3
        run: make download-aws

      # Run Playbook
      - name: Run Playbook
        run: make playbook

      # Run Linkchecker
      - name: Run Linkchecker
        run: make linkchecker

      # dev
      - name: Upload the site to s3
        run: make upload-dev

      # Create a github Release Artifact
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: dev-$GITHUB_RUN_NUMBER
          release_name: Release Dev Site
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/site
          asset_name: site
          asset_content_type: application/zip